import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
TOKEN = 'TOKEN'
TRENER_ID = 'id'  

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

# –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

# –°–æ—Å—Ç–æ—è–Ω–∏—è
STATE_NAME, STATE_SURNAME, STATE_PHONE = range(3)

@bot.message_handler(commands=['start'])
def start(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–•–æ—á—É –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É", callback_data='start_training'))
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:', reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data == 'start_training')
def start_training(call):
    """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ –∑–∞–ø–∏—Å–∏ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É"""
    markup = InlineKeyboardMarkup()
    markup.add(InlineKeyboardButton("–ö–∞—Ä–∞—Ç—ç", callback_data='karate'))
    markup.add(InlineKeyboardButton("–ö–∞–ø–æ—ç–π—Ä–∞ –¥–ª—è –¥–µ—Ç–µ–π", callback_data='kapoeyra_for_kids'))
    markup.add(InlineKeyboardButton("–ù–µ–π—Ä–æ—Ñ–∏—Ç–Ω–µ—Å –¥–ª—è –¥–µ—Ç–µ–π", callback_data='neyrofitness_for_kids'))
    markup.add(InlineKeyboardButton("–¢—Ö—ç–∫–≤–æ–Ω–¥–æ", callback_data='txekvondo'))
    markup.add(InlineKeyboardButton("–ö–æ–±—É–¥–æ", callback_data='kobudo'))
    markup.add(InlineKeyboardButton("–ù–∏–Ω–¥–∑—è-–∫–ª—É–±", callback_data='nindza-club'))
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:",
        reply_markup=markup
    )

@bot.callback_query_handler(func=lambda call: call.data in ['karate', 'kapoeyra_for_kids', 'neyrofitness_for_kids', 'txekvondo', 'kobudo', 'nindza-club'])
def select_sport(call):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≤–∏–¥–∞ —Å–ø–æ—Ä—Ç–∞"""
    user_data[call.from_user.id] = {
        'sport': call.data,
        'username': f"@{call.from_user.username}" if call.from_user.username else "–ù–µ —É–∫–∞–∑–∞–Ω"
    }
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –∏–º—è:"
    )
    bot.register_next_step_handler(call.message, get_name)

def get_name(message):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏"""
    user_id = message.from_user.id
    user_data[user_id]['name'] = message.text
    bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é:")
    bot.register_next_step_handler(message, get_surname)

def get_surname(message):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–º–∏–ª–∏–∏"""
    user_id = message.from_user.id
    user_data[user_id]['surname'] = message.text
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞
    markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.add(KeyboardButton("üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True))
    
    bot.send_message(
        message.chat.id,
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –≤–∞—à–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏:",
        reply_markup=markup
    )
    bot.register_next_step_handler(message, get_phone)

def get_phone(message):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –ø–æ–∫–∞–∑ –¥–Ω–µ–π"""
    user_id = message.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    if message.contact:
        user_data[user_id]['phone'] = message.contact.phone_number
    else:
        user_data[user_id]['phone'] = message.text
    
    # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    markup = ReplyKeyboardRemove()
    bot.send_message(
        message.chat.id,
        "–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –¥–µ–Ω—å:",
        reply_markup=markup
    )
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–Ω—è
    markup = InlineKeyboardMarkup()
    markup.row(
        InlineKeyboardButton("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", callback_data='–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫'),
        InlineKeyboardButton("–í—Ç–æ—Ä–Ω–∏–∫", callback_data='–í—Ç–æ—Ä–Ω–∏–∫')
    )
    markup.row(
        InlineKeyboardButton("–°—Ä–µ–¥–∞", callback_data='–°—Ä–µ–¥–∞'),
        InlineKeyboardButton("–ß–µ—Ç–≤–µ—Ä–≥", callback_data='–ß–µ—Ç–≤–µ—Ä–≥')
    )
    markup.add(InlineKeyboardButton("–ü—è—Ç–Ω–∏—Ü–∞", callback_data='–ü—è—Ç–Ω–∏—Ü–∞'))
    
    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏ –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏:",
        reply_markup=markup
    )

@bot.callback_query_handler(func=lambda call: call.data in ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞'])
def select_day(call):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–Ω—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏"""
    user_id = call.from_user.id
    day = call.data
    user_data[user_id]['day'] = day
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏
    user = user_data[user_id]
    application_text = (
        "üèÜ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É üèÜ\n"
        f"üë§ –ò–º—è: {user.get('name', '')} {user.get('surname', '')}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user.get('phone', '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
        f"üìå –¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞: {user.get('sport', '')}\n"
        f"üìÖ –î–µ–Ω—å: {day}\n"
        f"üîó Telegram: {user.get('username', '')}\n"
        f"üÜî ID: {user_id}"
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    bot.send_message(call.message.chat.id, f"‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!\n\n{application_text}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–µ–Ω–µ—Ä—É
    try:
        bot.send_message(TRENER_ID, f"üì¨ –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê!\n\n{application_text}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç—Ä–µ–Ω–µ—Ä—É: {e}")
        bot.send_message(
            call.message.chat.id,
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏ —Ç—Ä–µ–Ω–µ—Ä—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –æ–± —ç—Ç–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )
    
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text="‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –¢—Ä–µ–Ω–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏."
    )

@bot.message_handler(func=lambda message: True)
def handle_other_messages(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—á–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    bot.send_message(message.chat.id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /start")

if __name__ == '__main__':
    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    bot.polling(none_stop=True)
